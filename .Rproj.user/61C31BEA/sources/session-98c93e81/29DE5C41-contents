---
title: "ANOVA"
author: "Nívia"
format: html
---

# ANOVA - Três ou mais tratamentos

A ANOVA (Análise de Variância) é um método estatístico que permite comparar as médias de três ou mais grupos e verificar se há diferenças significativas entre elas. A ANOVA usa o teste F para testar a hipótese nula de que as médias populacionais são iguais contra a hipótese alternativa de que pelo menos uma média é diferente das demais.

## Anova com 1 fator

Como dito, a ANOVA é um método utilizado para comparar as médias de três ou mais grupos independentes. Então, dada a *situação*: Experimento com um fator e em delineamento inteiramente casualizado para comparar o crescimento micelial de diferentes espécies de um fungo fitopatogênico. A resposta a ser estudada é a TCM = taxa de crescimento micelial. Pergunta a ser resposndida: Há efeito da espécie no crescimento micelial?

**Preparo pré-análise**: carregamento de pacotes e importação dos dados.

```{r}
#| warning: false
#| message: false
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
micelial <- read_excel("dados-diversos.xlsx", "micelial")
head(micelial)

```

**Visualização dos dados**:

```{r}
micelial |>
  ggplot(aes(especie, tcm))+
  geom_boxplot()
```

### Modelo usando aov()

Para verificar os dados usando anova, um novo modelo para atribuir a função aov() contendo os argumentos tratamento em função da variável resposta deve ser criado (ex.: tcm \~ espécie), o banco de dados referido deve ser enunciado após o argumento separado por vírgula seguido do nome data = nome do conjunto de dados (ex.: micelial). Depois disso, pede um quadro de resumo do novo modelo criado.

```{r}
aov1 <- aov(tcm ~ especie, data = micelial)
summary(aov1)
```

Interpretação: Nesse conjunto de dados, não há diferença na media micelial (não há efeito significativo da espécie sobre o cresc. micelial).

### Testando as premissas

Depois de fazer a anova, testa-se as premissas. É mais importante os dados serem homogêneos do que normais. Para testar as premissas, é necessário instalar e carregar o pacote performance e o pacote DHARMa. O pacote performance permite checar as premissas (check\_), já o pacote DHARMA ((Distributed Hierarchical Accumulation of Residuals for Generalized Linear Models in R) é para visualizar os dados pelo diagnóstico do resíduo. O pacote DHARMa permite faz uma comparação dos resíduos simulados, que são gerados pelo pacote, com os resíduos observados e ver graficamente quando a distribuição dos dados não é normal e/ou quando há variação heterocedástica. Após isso, deve-se fazer o teste de normalidade dos resíduos com a interação entre a anova e os resíduos.

```{r}
library(performance)
check_heteroscedasticity(aov1)
check_normality(aov1)
library(DHARMa)
hist (aov1$residuals)
qqnorm(aov1$residuals)
qqline(aov1$residuals)
plot(simulateResiduals(aov1))
shapiro.test(aov1$residuals)
```

**Interepretação**:Premissas da anova atendidas. Efeito não significativo de espécies.

## Dados não paramétricos

Caso nos deparemos com o não atendimento das premissas, o que devemos fazer?

**Situação**: conjunto InsectSprays: efeito de inseticida na mortalidade de insetos (Beall, 1942).Dados no pacote "datasets" do R.

```{r}
insects <- tibble::as_tibble(InsectSprays) |>
  dplyr::select(spray, count)
insects

```

**Análise visual dos dados**:

```{r}
insects |>
  ggplot(aes(spray, count))+
  geom_boxplot()
```

**Rodando o modelo de anova**: Aparentemente - pelo visual do gráfico - os dadis apresentaram-se não paramétricos. Quando se analisa um conjunto de dados e esses dados apresentam-se não paramétricos, a forma de trabalhar esses dados torna-se um pouco diferente. Antes de partir para testes diferentes, deve-se comprovar, por meio da anova e das premissas, que os dados realmente não são normais e homogêneos.

```{r}
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
```

*Interpretação*: dados não são normais e homogeneos.

### Alternativas para dados não paramétricos

Quando se tem dados não paramétricos, tem-se 3 alternativas - transformar os dados (raiz quadrada, log, etc); usar testes não paramétricos (Kruskal) ou usar modelos lineares generalizados (melhor opção).

**1. Transformar os dados para normalizar:** Usa-se a raiz quadrada para tentar noprmalizar e tornar os dados normais e homogenos. Pode-se também tentar o log da variável resposta + 0.5.

```{r}
aov2 <- aov(sqrt(count) ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
```

**2. Uso de testes não paramétricos**: Se não normalizar e os dados ainda forem heterogenos, usa-se testes não paramétricos. Uma das saídas para normalizar os dados é a utilização do teste de Kruskal-Wallis. O teste de Kruskal-Wallis utiliza os valores numéricos transformados em postos e agrupados num só conjunto de dados, é testado se as amostras vêm de uma mesma população, ou se pelo menos uma delas vêm de população distinta das demais. O teste de Kruskal-Wallis dispensa a pressuposição de normalidade e homocedasticidade. Tem 2 opções de teste Kruskal. Para usar essa opção, é necessário baixar e carregar o pacote agricolae.

```{r}
kruskal.test(count ~ spray, data = insects)
library(agricolae)
kruskal(insects$count, insects$spray, 
        console = TRUE)
```

[***Pacote emmeans***]{.underline}

O pacote emmeans ("estimated marginal means", ou médias marginais estimadas) é usado para realizar testes de comparação de médias entre grupos, ajustando para outros fatores importantes que podem influenciar as médias. O pacote é particularmente útil em modelos lineares generalizados (GLM).

Função emmeans - tirar a média da variável inseticida: Para dar o valor original da média e não o valor transformado, usa-se a função type = response. A função pwpm gera uma tabela de comparação das médias e cld é uma função que serve para gerar os números que diferenciam os grupos de médias.

```{r}
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
library(emmeans)
aov2_means <- emmeans(aov2, ~ spray,
                         type = "response")
aov2_means
pwpm(aov2_means)
library(multcomp)
library(multcompView)
cld(aov2_means)
```

**3. GLM**: A terceira opção é a geração de modelos lineares generalizados. Para publicação de artigos, essa é a opção mais aconselhável, é mais elegante do que transformar os dados. Para a geração de modelos, a função a ser utilizada é a glm e precisa indicar os argumentos family = poisson(link = "identity"). Para visualizar, pode usar o pacote Dharma e puxar um plot.

```{r}
glm1 <- glm(count ~spray,
             data = insects,
             family = poisson(link = "identity"))
plot(simulateResiduals(glm1))
summary(glm1)
glm1_means <- emmeans(glm1, ~ spray)
cld(glm1_means)

```
