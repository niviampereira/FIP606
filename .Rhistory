limits = c(0,100))+
labs(x = "Time(days)",
y = "Severity (%)",
title = "My first disease progress curve",
subtitle = "Using ggplot",
caption = "Source: FIP 606")+
theme_light()
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day) |>
summarise(sev = mean(severity)) |>
ggplot(aes(day, sev))+
geom_point()
mg2 |>
ggplot(aes(day, sev))+
geom_line(color = "darkorange")+
geom_point(size = 3,
color = "darkorange")+
scale_x_continuous(breaks = c(0,7, 14, 21, 28, 35, 42, 49, 56, 63))+
scale_y_continuous(n.breaks = 5,
limits = c(0,100))+
labs(x = "Time(days)",
y = "Severity (%)",
title = "My first disease progress curve",
subtitle = "Using ggplot",
caption = "Source: FIP 606")+
theme_light()
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day) |>
summarise(sev = mean(severity)) |>
ggplot(aes(day, sev))+
geom_point()
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day) |>
summarise(sev = mean(severity)) |>
ggplot(aes(day, sev))+
geom_point()
mg2 <- mg
mg2 <- mg  |>
select(day, rep, severity)
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day)
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day) |>
summarise(sev = mean(severity))
mg2 <- mg  |>
select(day, rep, severity) |>
group_by(day) |>
summarise(sev = mean(severity)) |>
ggplot(aes(day, sev))+
geom_point()
library(tidyverse)
library(readxl)
mg <- read_excel("dados-diversos.xlsx")
mg |>
ggplot(aes(trat, comp))+
geom_point()
mg |>
ggplot(aes(trat, comp))+
geom_jitter(width = 0.1)
mg |>
ggplot(aes(trat, comp))+
geom_boxplot()+
geom_jitter(width = 0.1)
p_box <- mg |>
ggplot(aes(trat, comp))+
geom_boxplot(outlier.color = NA,
fill = "orange",
size = 0.5)+
geom_jitter(width = 0.1,
height = 0,
color = "black")+
scale_y_continuous(limits = c(5,20),
n.breaks = 10)+
labs(y = "Lesion size (mm)",
x = " ")+
theme_bw()
p_box
ggsave("figs/plot2.png", bg = "white")
p_means <- mg |>
group_by(trat) |>
summarise(comp_mean = mean(comp),
comp_sd = sd(comp)) |>
ggplot(aes(trat, comp_mean))+
#geom_col(fill = "orange",
#width = 0.5)+
geom_point()+
scale_y_continuous(limits = c(7,18),
n.breaks = 6)+
geom_errorbar(aes(ymin = comp_mean - comp_sd,
ymax = comp_mean + comp_sd,
width = 0.05))+
theme_bw()+
labs(y = "Lesion size (mm)",
x = " ")
p_means
#salvando gráfico
ggsave("figs/mean_sd.png",
width = 4,
bg = "white")
install.packages("ggthemes")
library(ggthemes)
library(patchwork)
p_box + p_means
#ou então usar a função abaixo
p_box | p_means
# para adicionar letras A, B para identificar o grafico e adicionar titulo:
(p_box | p_means)+
plot_annotation(tag_levels = "A",
title = 'Gráficos que impressionam')
ggsave("figs/combined.png")
survey <- read_excel("dados-diversos.xlsx",
sheet = "survey")
survey |>
filter(state == "RS") |>
#Para contar o numero de ocorrencias em cada classe:
count(species) |>
ggplot(aes(species, n))+
geom_col(width = 0.4,
fill = "steelblue")+
coord_flip()+
labs(x = " ", y = "Number of isolates",
tiltle = "Horizontal bar plot",
subtitle = "Using ggplot")+
theme_bw()
ggsave("Figs/barplot.png", bg = "white")
survey |>
filter(state == "RS") |>
count(species, residue) |>
ggplot(aes(species, n))+
geom_col(width = 0.4,
fill = "steelblue")+
coord_flip()+
facet_wrap(~residue, ncol = 1)+
labs(x = " ", y = "Number of isolates",
tiltle = "Horizontal bar plot",
subtitle = "Using ggplot")+
theme_bw()
ggsave("Figs/barplotfacet.png", bg = "white")
library(ggthemes)
library(magrittr) # para usar pipes
library(ggplot2) # para gráficos
library(dplyr)
library(readxl)
library(tidyr)
data_mg <- read_excel("dados-diversos.xlsx")
head(data_mg)
data2 <- data_mg %>%
group_by(trat) %>%
summarise(
mean_com = mean(comp),
sd_comp = sd(comp),
var_comp = var(comp),
n = n(),
se_comp = sd_comp / sqrt(n - 1),
ci = se_comp * qt(0,025, df = 9))
data2
data2 |>
ggplot(aes(trat, mean_com)) +
geom_col(width = 0.5,
fill = "steelblue") +
geom_errorbar(aes(
ymin = mean_com - se_comp,
ymax = mean_com + se_comp),
width = 0.1) +
ylim(0,20) +
labs(x = "", y = "Mean size (mm)")
data2 |>
ggplot(aes(trat, mean_com)) +
geom_col(width = 0.5, fill = "steelblue") +
geom_errorbar(aes(
ymin = mean_com - ci,
ymax = mean_com + ci),
width = 0.1) +
ylim(0,20) +
labs(x = "", y = "Mean size (mm)")
data_mg2 <- data_mg |>
pivot_wider(1,
names_from = trat,
values_from = comp)
data_mg2
t.test(data_mg2$Mg2, data_mg2$control,
paired = F)
attach(data_mg2)
var.test(Mg2, control)
shapiro.test(Mg2)
shapiro.test(control)
qqnorm (Mg2)
qqline(Mg2)
qqnorm(control)
qqline(control)
escala <- read_excel("dados-diversos.xlsx", "escala")
head(escala)
escala2 <- escala |>
select(assessment, rater, acuracia)
escala3 <- escala2|>
pivot_wider(1,
names_from = assessment,
values_from = acuracia)
scala3 <- scala2|>
pivot_wider(1,
names_from = assessment,
values_from = acuracia)
escala3 |>
pivot_wider(1,
names_from = assessment,
values_from = acuracia)
escala3 |>
pivot_wider(1,
names_from = assessment,
values_from = acuracia)
wilcox.test(escala3$Aided1, escala3$Unaided, paired = TRUE)
library(magrittr) # para usar pipes
library(ggplot2) # para gráficos
library(dplyr)
library(readxl)
library(tidyr)
data_mg <- read_excel("dados-diversos.xlsx")
head(data_mg)
data2 <- data_mg %>%
group_by(trat) %>%
summarise(
mean_com = mean(comp),
sd_comp = sd(comp),
var_comp = var(comp),
n = n(),
se_comp = sd_comp / sqrt(n - 1),
ci = se_comp * qt(0,025, df = 9))
data2
data2 |>
ggplot(aes(trat, mean_com)) +
geom_col(width = 0.5,
fill = "steelblue") +
geom_errorbar(aes(
ymin = mean_com - se_comp,
ymax = mean_com + se_comp),
width = 0.1) +
ylim(0,20) +
labs(x = "", y = "Mean size (mm)")
data2 |>
ggplot(aes(trat, mean_com)) +
geom_col(width = 0.5, fill = "steelblue") +
geom_errorbar(aes(
ymin = mean_com - ci,
ymax = mean_com + ci),
width = 0.1) +
ylim(0,20) +
labs(x = "", y = "Mean size (mm)")
data_mg2 <- data_mg |>
pivot_wider(1,
names_from = trat,
values_from = comp)
data_mg2
t.test(data_mg2$Mg2, data_mg2$control,
paired = F)
attach(data_mg2)
var.test(Mg2, control)
shapiro.test(Mg2)
shapiro.test(control)
qqnorm (Mg2)
qqline(Mg2)
qqnorm(control)
qqline(control)
escala <- read_excel("dados-diversos.xlsx", "escala")
head(escala)
escala2 <- escala |>
select(assessment, rater, acuracia)
escala3 <- escala2|>
pivot_wider(1,
names_from = assessment,
values_from = acuracia)
## homocedasticidade dois grupos
attach(escala3)
var.test(Aided1, Unaided)
## normalidade
shapiro.test(Aided1)$p.value
shapiro.test(Unaided)$p.value
qqnorm(Aided1)
qqline(Aided1)
qqnorm(Unaided)
qqline(Unaided)
## teste t para amostras pareadas
t_escala <- t.test(escala3$Aided1, escala3$Unaided,
paired = TRUE,
var.equal = F
)
t_escala
library(tidyverse)
library(readxl)
dat <- read_excel("dados-diversos.xlsx", "fungicida_vaso")
dat2 <- dat |>
mutate(inc = dis_sp / n_sp*100)
dat2 |>
ggplot(aes(x = treat,
y = inc))+
geom_jitter(width = 0.1)+
facet_wrap(~dose)
m1 <- aov(inc ~treat*dose,
dat = dat2)
summary(m1)
library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
library(DHARMa)
plot(simulateResiduals(m1))
m1 <- aov(log(inc + 0.5) ~ treat*dose,
dat = dat2)
summary(m1)
check_normality(m1)
check_heteroscedasticity(m1)
plot(simulateResiduals(m1))
library(emmeans)
means_m1 <- emmeans(m1, ~ treat | dose,
type = "response")
means_m1
library(multcompView)
library(multcomp)
cld(means_m1)
#dose dentro dos tratamentos
#means_ml <- emmeans(ml1, ~ dose | trat, type = "response")
library(agricolae)
cv.model(m1)
milho <- read_excel("dados-diversos.xlsx", "armazena")
milho |>
filter(tempo ==8) |>
ggplot(aes(factor(tipo), peso_mil,
color = factor(umidade)))+
geom_jitter(width = 0.1)+
facet_wrap(~ umidade)
milho2 <- milho |>
filter(tempo ==8)
m2 <- aov(peso_mil ~ factor(tipo)*factor(umidade),
data = milho2)
summary(m2)
milho3 <- read_excel("dados-diversos.xlsx", "milho")
m4 <- aov(yield ~hybrid*method,
data = milho3)
summary(m4)
check_heteroscedasticity(m4)
plot(simulateResiduals(m4))
medias_m4 <- emmeans(m4, ~ hybrid)
medias_m4
cld(medias_m4)
m5 <- aov(yield ~hybrid, data = milho3)
summary(m5)
m4 <- aov(yield ~hybrid,
data = milho3)
summary(m5)
check_heteroscedasticity(m5)
plot(simulateResiduals(m5))
medias_m5 <- emmeans(m5, ~hybrid)
medias_m5
cld(medias_m5)
pwpm(medias_m5)
fung <- read_excel("dados-diversos.xlsx", "fungicida_vaso")
fung2 <- fung |>
mutate(inc = inf_seeds/n_seeds*100,
rank_inc = rank(inc))
rank_anova <- aov(rank_inc ~treat*dose, data = fung2)
summary(rank_anova)
means_rank <- emmeans(rank_anova, ~treat | dose)
cld(means_rank)
library(readxl)
library(tidyverse)
micelial <- read_excel("dados-diversos.xlsx", "micelial")
head(micelial)
micelial |>
ggplot(aes(especie, tcm))+
geom_boxplot()
aov1 <- aov(tcm ~ especie, data = micelial)
summary(aov1)
library(performance)
check_heteroscedasticity(aov1)
check_normality(aov1)
library(DHARMa)
hist (aov1$residuals)
qqnorm(aov1$residuals)
qqline(aov1$residuals)
plot(simulateResiduals(aov1))
shapiro.test(aov1$residuals)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects |>
ggplot(aes(spray, count))+
geom_boxplot()
install.packages("multcomp")
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects |>
ggplot(aes(spray, count))+
geom_boxplot()
insects <- as_tibble(InsectSprays)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- tbl_df(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
install.packages("dplyr")
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
install.packages(c("dbplyr", "dtplyr", "googlesheets4", "metafor"))
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- tbl_df(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays)
insects |>
ggplot(aes(spray, count))+
geom_boxplot()
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- tbl_df(InsectSprays)
insects <- as_tibble(InsectSprays)
install.packages("tibble")
insects <- as_tibble(InsectSprays) |>
select(spray, count)
library(tibble)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
insects <- as_tibble(InsectSprays)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects |>
select(spray, count)
library(readxl)
library(tidyverse)
library(dplyr)
micelial <- read_excel("dados-diversos.xlsx", "micelial")
head(micelial)
micelial |>
ggplot(aes(especie, tcm))+
geom_boxplot()
aov1 <- aov(tcm ~ especie, data = micelial)
summary(aov1)
library(performance)
check_heteroscedasticity(aov1)
check_normality(aov1)
library(DHARMa)
hist (aov1$residuals)
qqnorm(aov1$residuals)
qqline(aov1$residuals)
plot(simulateResiduals(aov1))
shapiro.test(aov1$residuals)
insects <- as_tibble(InsectSprays)
insects <- as_tibble(InsectSprays) |>
select(spary, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects |>
ggplot(aes(spray, count))+
geom_boxplot()
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
aov2 <- aov(sqrt(count) ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
kruskal.test(count ~ spray, data = insects)
library(agricolae)
kruskal(insects$count, insects$spray,
console = TRUE)
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
library(emmeans)
aov2_means <- emmeans(aov2, ~ spray,
type = "response")
aov2_means
pwpm(aov2_means)
library(multcomp)
library(multcompView)
cld(aov2_means)
glm1 <- glm(count ~spray,
data = insects,
family = poisson(link = "identity"))
plot(simulateResiduals(glm1))
summary(glm1)
glm1_means <- emmeans(glm1, ~ spray)
cld(glm1_means)
insects <- tbl_df(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays) |>
select(spray, count)
insects <- as_tibble(InsectSprays)
insects |>
select(spray, count)
