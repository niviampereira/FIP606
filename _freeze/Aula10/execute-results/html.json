{
  "hash": "01c0d76d4b7468692e64ba024d9d24c8",
  "result": {
    "markdown": "---\ntitle: \"ANOVA\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# ANOVA - Três ou mais tratamentos\n\nA ANOVA (Análise de Variância) é um método estatístico que permite comparar as médias de três ou mais grupos e verificar se há diferenças significativas entre elas. A ANOVA usa o teste F para testar a hipótese nula de que as médias populacionais são iguais contra a hipótese alternativa de que pelo menos uma média é diferente das demais.\n\n## Anova com 1 fator\n\nComo dito, a ANOVA é um método utilizado para comparar as médias de três ou mais grupos independentes. Então, dada a *situação*: Experimento com um fator e em delineamento inteiramente casualizado para comparar o crescimento micelial de diferentes espécies de um fungo fitopatogênico. A resposta a ser estudada é a TCM = taxa de crescimento micelial. Pergunta a ser resposndida: Há efeito da espécie no crescimento micelial?\n\n**Preparo pré-análise**: carregamento de pacotes e importação dos dados.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-1_5829bead739dc88d5a085c922360f8c3'}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nmicelial <- read_excel(\"dados-diversos.xlsx\", \"micelial\")\nhead(micelial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  especie   rep   tcm\n  <chr>   <dbl> <dbl>\n1 Fasi        1  1.5 \n2 Fasi        2  1.59\n3 Fasi        3  1.52\n4 Fasi        4  1.52\n5 Fasi        5  1.24\n6 Fasi        6  1.29\n```\n:::\n:::\n\n\n**Visualização dos dados**:\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-2_5db2cf84f10e4372ffe3b61e7ab4f13a'}\n\n```{.r .cell-code}\nmicelial |>\n  ggplot(aes(especie, tcm))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Modelo usando aov()\n\nPara verificar os dados usando anova, um novo modelo para atribuir a função aov() contendo os argumentos tratamento em função da variável resposta deve ser criado (ex.: tcm \\~ espécie), o banco de dados referido deve ser enunciado após o argumento separado por vírgula seguido do nome data = nome do conjunto de dados (ex.: micelial). Depois disso, pede um quadro de resumo do novo modelo criado.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-3_1be3ecb9d74f2766f5a858601a57ed6c'}\n\n```{.r .cell-code}\naov1 <- aov(tcm ~ especie, data = micelial)\nsummary(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)\nespecie      4 0.4692 0.11729   1.983  0.117\nResiduals   37 2.1885 0.05915               \n```\n:::\n:::\n\n\nInterpretação: Nesse conjunto de dados, não há diferença na media micelial (não há efeito significativo da espécie sobre o cresc. micelial).\n\n### Testando as premissas\n\nDepois de fazer a anova, testa-se as premissas. É mais importante os dados serem homogêneos do que normais. Para testar as premissas, é necessário instalar e carregar o pacote performance e o pacote DHARMa. O pacote performance permite checar as premissas (check\\_), já o pacote DHARMA ((Distributed Hierarchical Accumulation of Residuals for Generalized Linear Models in R) é para visualizar os dados pelo diagnóstico do resíduo. O pacote DHARMa permite faz uma comparação dos resíduos simulados, que são gerados pelo pacote, com os resíduos observados e ver graficamente quando a distribuição dos dados não é normal e/ou quando há variação heterocedástica. Após isso, deve-se fazer o teste de normalidade dos resíduos com a interação entre a anova e os resíduos.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-4_48c7c00dec24932359cc8e14aeb8549f'}\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.175).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.074).\n```\n:::\n\n```{.r .cell-code}\nlibrary(DHARMa)\nhist (aov1$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(aov1$residuals)\nqqline(aov1$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(simulateResiduals(aov1))\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(aov1$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  aov1$residuals\nW = 0.95101, p-value = 0.07022\n```\n:::\n:::\n\n\n**Interepretação**:Premissas da anova atendidas. Efeito não significativo de espécies.\n\n## Dados não paramétricos\n\nCaso nos deparemos com o não atendimento das premissas, o que devemos fazer?\n\n**Situação**: conjunto InsectSprays: efeito de inseticida na mortalidade de insetos (Beall, 1942).Dados no pacote \"datasets\" do R.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-5_68e93e3506768726b459eb18d7f32b61'}\n\n```{.r .cell-code}\ninsects <- tibble::as_tibble(InsectSprays) |>\n  dplyr::select(spray, count)\ninsects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 72 × 2\n   spray count\n   <fct> <dbl>\n 1 A        10\n 2 A         7\n 3 A        20\n 4 A        14\n 5 A        14\n 6 A        12\n 7 A        10\n 8 A        23\n 9 A        17\n10 A        20\n# ℹ 62 more rows\n```\n:::\n:::\n\n\n**Análise visual dos dados**:\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-6_25bd704e0e00306499c2504f705968cd'}\n\n```{.r .cell-code}\ninsects |>\n  ggplot(aes(spray, count))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n**Rodando o modelo de anova**: Aparentemente - pelo visual do gráfico - os dadis apresentaram-se não paramétricos. Quando se analisa um conjunto de dados e esses dados apresentam-se não paramétricos, a forma de trabalhar esses dados torna-se um pouco diferente. Antes de partir para testes diferentes, deve-se comprovar, por meio da anova e das premissas, que os dados realmente não são normais e homogêneos.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-7_e676ac66e335345bac781b9adc059cc5'}\n\n```{.r .cell-code}\naov2 <- aov(count ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5   2669   533.8    34.7 <2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Non-normality of residuals detected (p = 0.022).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n:::\n:::\n\n\n*Interpretação*: dados não são normais e homogeneos.\n\n### Alternativas para dados não paramétricos\n\nQuando se tem dados não paramétricos, tem-se 3 alternativas - transformar os dados (raiz quadrada, log, etc); usar testes não paramétricos (Kruskal) ou usar modelos lineares generalizados (melhor opção).\n\n**1. Transformar os dados para normalizar:** Usa-se a raiz quadrada para tentar noprmalizar e tornar os dados normais e homogenos. Pode-se também tentar o log da variável resposta + 0.5.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-8_76e79fa98959c7260ebe6dac0c50510d'}\n\n```{.r .cell-code}\naov2 <- aov(sqrt(count) ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5  88.44  17.688    44.8 <2e-16 ***\nResiduals   66  26.06   0.395                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.681).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.854).\n```\n:::\n:::\n\n\n**2. Uso de testes não paramétricos**: Se não normalizar e os dados ainda forem heterogenos, usa-se testes não paramétricos. Uma das saídas para normalizar os dados é a utilização do teste de Kruskal-Wallis. O teste de Kruskal-Wallis utiliza os valores numéricos transformados em postos e agrupados num só conjunto de dados, é testado se as amostras vêm de uma mesma população, ou se pelo menos uma delas vêm de população distinta das demais. O teste de Kruskal-Wallis dispensa a pressuposição de normalidade e homocedasticidade. Tem 2 opções de teste Kruskal. Para usar essa opção, é necessário baixar e carregar o pacote agricolae.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-9_89a366e6b916e65f29ae784dd15c1359'}\n\n```{.r .cell-code}\nkruskal.test(count ~ spray, data = insects)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n```\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\nkruskal(insects$count, insects$spray, \n        console = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nStudy: insects$count ~ insects$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsects$spray,  means of the ranks\n\n  insects.count  r\nA      52.16667 12\nB      54.83333 12\nC      11.45833 12\nD      25.58333 12\nE      19.33333 12\nF      55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insects$count groups\nF      55.62500      a\nB      54.83333      a\nA      52.16667      a\nD      25.58333      b\nE      19.33333     bc\nC      11.45833      c\n```\n:::\n:::\n\n\n[***Pacote emmeans***]{.underline}\n\nO pacote emmeans (\"estimated marginal means\", ou médias marginais estimadas) é usado para realizar testes de comparação de médias entre grupos, ajustando para outros fatores importantes que podem influenciar as médias. O pacote é particularmente útil em modelos lineares generalizados (GLM).\n\nFunção emmeans - tirar a média da variável inseticida: Para dar o valor original da média e não o valor transformado, usa-se a função type = response. A função pwpm gera uma tabela de comparação das médias e cld é uma função que serve para gerar os números que diferenciam os grupos de médias.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-10_7b96b682187ff784b8431d1b2a5e3208'}\n\n```{.r .cell-code}\naov2 <- aov(count ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5   2669   533.8    34.7 <2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Non-normality of residuals detected (p = 0.022).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\naov2_means <- emmeans(aov2, ~ spray,\n                         type = \"response\")\naov2_means\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray emmean   SE df lower.CL upper.CL\n A      14.50 1.13 66   12.240    16.76\n B      15.33 1.13 66   13.073    17.59\n C       2.08 1.13 66   -0.177     4.34\n D       4.92 1.13 66    2.656     7.18\n E       3.50 1.13 66    1.240     5.76\n F      16.67 1.13 66   14.406    18.93\n\nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(aov2_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        A       B       C       D       E       F\nA [14.50]  0.9952  <.0001  <.0001  <.0001  0.7542\nB  -0.833 [15.33]  <.0001  <.0001  <.0001  0.9603\nC  12.417  13.250 [ 2.08]  0.4921  0.9489  <.0001\nD   9.583  10.417  -2.833 [ 4.92]  0.9489  <.0001\nE  11.000  11.833  -1.417   1.417 [ 3.50]  <.0001\nF  -2.167  -1.333 -14.583 -11.750 -13.167 [16.67]\n\nRow and column labels: spray\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\nlibrary(multcompView)\ncld(aov2_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray emmean   SE df lower.CL upper.CL .group\n C       2.08 1.13 66   -0.177     4.34  1    \n E       3.50 1.13 66    1.240     5.76  1    \n D       4.92 1.13 66    2.656     7.18  1    \n A      14.50 1.13 66   12.240    16.76   2   \n B      15.33 1.13 66   13.073    17.59   2   \n F      16.67 1.13 66   14.406    18.93   2   \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n**3. GLM**: A terceira opção é a geração de modelos lineares generalizados. Para publicação de artigos, essa é a opção mais aconselhável, é mais elegante do que transformar os dados. Para a geração de modelos, a função a ser utilizada é a glm e precisa indicar os argumentos family = poisson(link = \"identity\"). Para visualizar, pode usar o pacote Dharma e puxar um plot.\n\n\n::: {.cell hash='Aula10_cache/html/unnamed-chunk-11_a3ed4669abbcd605e672d55aa076ef20'}\n\n```{.r .cell-code}\nglm1 <- glm(count ~spray,\n             data = insects,\n             family = poisson(link = \"identity\"))\nplot(simulateResiduals(glm1))\n```\n\n::: {.cell-output-display}\n![](Aula10_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = count ~ spray, family = poisson(link = \"identity\"), \n    data = insects)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.3852  -0.8876  -0.1482   0.6063   2.6922  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  14.5000     1.0992  13.191  < 2e-16 ***\nsprayB        0.8333     1.5767   0.529    0.597    \nsprayC      -12.4167     1.1756 -10.562  < 2e-16 ***\nsprayD       -9.5833     1.2720  -7.534 4.92e-14 ***\nsprayE      -11.0000     1.2247  -8.981  < 2e-16 ***\nsprayF        2.1667     1.6116   1.344    0.179    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 409.041  on 71  degrees of freedom\nResidual deviance:  98.329  on 66  degrees of freedom\nAIC: 376.59\n\nNumber of Fisher Scoring iterations: 3\n```\n:::\n\n```{.r .cell-code}\nglm1_means <- emmeans(glm1, ~ spray)\ncld(glm1_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray emmean    SE  df asymp.LCL asymp.UCL .group\n C       2.08 0.417 Inf      1.27      2.90  1    \n E       3.50 0.540 Inf      2.44      4.56  12   \n D       4.92 0.640 Inf      3.66      6.17   2   \n A      14.50 1.099 Inf     12.35     16.65    3  \n B      15.33 1.130 Inf     13.12     17.55    3  \n F      16.67 1.179 Inf     14.36     18.98    3  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}