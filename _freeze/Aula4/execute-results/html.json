{
  "hash": "9d994d0f9a91b54bead5d6948e98f44c",
  "result": {
    "markdown": "---\ntitle: \"Aula4_visualização\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# Gráficos em ggplot\n\n## Importação de dados\n\nO pacote ggplot2 pode ser carregado individualmente, ou pode ser carregado pelo tidyverse.Após carregar o pacote, importa-se um banco de dados para trabalho. Para o formato csv, é necessário carregar o pacote tidyverse. As variáveis podem ser categóricas ou numéricas. As variáveis categóricas são entendidas no R como caracteres.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-1_2de812714889c8b6eaa235564652bfc6'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nmg <- read_csv(\"dados-diversos.csv\")\n```\n:::\n\n\n## GGPLOT - Definindo camadas\n\nA primeira função para criar um ggplot é a função ggplot, que define o conjunto de dados e elementos de estética dos gráficos.O primeiro elemento da função é o conjunto de dados a ser utilizado. A programação de gráficos em ggplot2 é feito na forma de camadas, que são adiconadas a medida que se confecciona o gráfico, por isso que se usa o sinal de +, porque significa a adição de mais uma camada. O primeiro argumento da função é o data frame onde nossos dados foram armazenados (Ex. mg). Usa-se o pipe (\\|\\>) para enfatizar uma sequência de comandos ou ações no chunk e para evitar adiconar o nome do dataframe dentro da função ggplot. O pipe deve ter sempre um espaço antes dele e, geralmente, deve ser seguido por uma nova linha. Após a primeira etapa, cada linha deve ter dois espaços, o que torna mais fácil adicionar outras etapas ou reorganizar as já existentes.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-2_3c2df7b5db17ab3c39b5c23c5812d282'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nA função ggplot() define o plano com os eixos x e y. Uma das primeiras funções em ggplot é a aes, usada para descrever como as variáveis são mapeadas (eixos x e y). Para adionar cor usa-se a função color = nopme da cor. Ao incluir esta função dentro da função aes, dizemos ao ggplot que os pontos devem ser mapeados esteticamente utilizando cores para cada variavel (ex.irrigação). A função geo_point define que a forma geométrica a ser utilizada é baseada em pontos, gerando um gráfico de dispersão. A função alpha trabalha com a tansparência.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-3_73016998469f4f7824581d3cd5f6f9af'}\n\n```{.r .cell-code}\nmg |>\n  ggplot(aes(Irrigation, severity, color = Irrigation))+\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nA função shape é utilizada para adicionar diferentes formas ou tipos de marcadores para diferenciar as variáveis (ex. quadrado e triângulo).\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-4_626f92188533394bf3f9f76d54ccdbcc'}\n\n```{.r .cell-code}\nmg |>\n  ggplot(aes(Irrigation, severity, shape = Irrigation))+\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nAgora, mudamos a váriavel irrigation por day. Para isso, basta subtituir a variável dentro da função aes. A função filtro, como o próprio nome remete, filtra determinadas linhas e a função geom_line transforma o gráfico em um gráfico de linhas:\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-5_2e234a6b3face166fe972dff6ec26bc3'}\n\n```{.r .cell-code}\n# mudando para a variável day\nmg |> \n  ggplot(aes(day, severity, shape = Irrigation))+\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Deixando apenas 1 repetição - função filter e alterando para gráfico de linhas\nmg |> \n  filter(rep == 1) |>\n  ggplot(aes(day, severity, shape = Irrigation))+\n  geom_point(alpha = 0.5)+geom_line()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\nA função facet_wrap adiciona facetas.Ou seja, com essa função informamos que um grafico deve ser criado para cada ambiente, um grafico digferente para cada variável.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-6_de780e27c402ac66c9601c92a4f38c7e'}\n\n```{.r .cell-code}\n# Dividindo o número de repetições - função facet_wrap\nmg |> \n  ggplot(aes(day, severity, shape = Irrigation))+\n  geom_point(alpha = 0.5)+\n  geom_line()+\n  facet_wrap(~rep)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nOutras funções:\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-7_1911ba743485dcd9b8ba8c91c152e6ee'}\n\n```{.r .cell-code}\n#Função select - seleciona colunas\nmg |> \nselect(Irrigation, severity) |>\nggplot(aes(Irrigation, severity, shape = Irrigation))+geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### BoxPlot\n\nUsado para estatistica descritiva. Para adicionar um boxplot com o ggplot, basta fazer a adição da função geom_boxplot.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-8_2f50afd9b46531ac96d7b44f8f5a4b77'}\n\n```{.r .cell-code}\nmg |> \n  select(Irrigation, severity) |>\n  ggplot(aes(Irrigation, severity, shape = Irrigation))+geom_boxplot()+\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Mudando a variável irrigação por day\nmg |> \n  select(day, severity) |>\n  ggplot(aes(day, severity))+\n  geom_boxplot()+\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Separando por grupo - função group\nmg |> \n  select(day, severity) |>\n  ggplot(aes(day, severity, group = day))+\n  geom_boxplot()+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Retirando group e geom_boxplot\nmg |> \n  select(day, severity) |>\n  ggplot(aes(day, severity))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Agrupando por repetição: As primeiras 3 linhas separam a severidade por dia.\nmg |> \n  select(day, rep, severity) |>\n  group_by(day) |>\n  summarise(sev = mean(severity)) |>\n  ggplot(aes(day, sev))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n:::\n\n\nCriando um novo conjunto, fazendo a media e adicionando titulo no gráfico:\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-9_7cf896dfb2c5a46dde335d0002bd27d7'}\n\n```{.r .cell-code}\nmg2 <- mg  |> \n  select(day, rep, severity) |>\n  group_by(day) |>\n  summarise(sev = mean(severity)) |>\n  ggplot(aes(day, sev))+\n  geom_point()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}