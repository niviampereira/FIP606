{
  "hash": "7b9f9b6c353248bdd57e3208c99a83b6",
  "result": {
    "markdown": "---\ntitle: \"Aula15\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# Variáveis categóricas\n\nPara variaveis resposta categoricas, não se tira a média dos dados, ao inves disso, se monta uma tabela de contigencia e visualiza por meio de grafico de barras/colunas, pois se é sada para ver frequencia de ocorrencias, quando se tem variáveis categóricas nominais.\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-1_5861711ce0c8f2e22ae5a04055df5db6'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(epifitter)\n```\n:::\n\n\nDados: Quantas ocorrências tem em cada ano. Cruzando duas variáveis. Quantas espécies dos dados tem em cada ano (função table)\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-2_ce767dd63dbc4e4503bf507a00a0af31'}\n\n```{.r .cell-code}\nsurvey <- read_excel(\"dados-diversos.xlsx\",\"survey\")\nsurvey |>\n  count(year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n   year     n\n  <dbl> <int>\n1  2009   265\n2  2010   216\n3  2011   185\n```\n:::\n\n```{.r .cell-code}\nq <- table(survey$residue, survey$species)\n```\n:::\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-3_2b060c31d2a69fa3f702e8b97b832ab4'}\n\n```{.r .cell-code}\n#library(janitor)\nsurvey |>\n  tabyl(year, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n year Fgra Fspp\n 2009  225   40\n 2010  187   29\n 2011  140   45\n```\n:::\n:::\n\n\n## Pacote janitor: Para dar os valores em porcentagem usa-se a função adorn_percentages().\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-4_580cd00002481ad9297a04981816543f'}\n\n```{.r .cell-code}\nsurvey |>\n  filter(residue != \"NA\") |>\n  count(residue, species) |>\n  ggplot(aes(residue, n, fill = species))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Aula15_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nTeste q quadrado:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-5_0093a1f19d17394dd9a23f9e6840ca46'}\n\n```{.r .cell-code}\nq <- table(survey$residue, survey$species)\nchisq.test(q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  q\nX-squared = 1.1997, df = 1, p-value = 0.2734\n```\n:::\n:::\n\n\nHipótese nula: as populações são iguais.\n\nUsa-se o fisher.test(q) quando o número de observações é baixo, algo em torno de 6 ou 7.\n\nA severidade é influenciada pelo resíduo?\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-6_7fb0906dad72ca1fac5ee7f82a0c84e7'}\n\n```{.r .cell-code}\nq <- table(survey$residue, survey$inc_class)\nchisq.test(q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  q\nX-squared = 2.6165, df = 1, p-value = 0.1058\n```\n:::\n\n```{.r .cell-code}\nsurvey|>\n  filter(residue != \"NA\") |>\n  count(residue, inc_class) |>\n  ggplot(aes(residue, n, fill = inc_class))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Aula15_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nPelo p valor, a classe de severidade independe do resto cultura, ou seja, o resto cultural não influencia na severidade.\n\nNovo conjunto de dados:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-7_8394c94fed36d27c490ce937912486cf'}\n\n```{.r .cell-code}\ncurve <- read_excel(\"dados-diversos.xlsx\", \"curve\")\n\ncurve2 <- curve |> \n  group_by(Irrigation, day) |>\n  summarize(mean_severity = mean(severity),\n            sd_severity = sd(severity))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n  curve2 |>\n    ggplot(aes(day, mean_severity, color = Irrigation))+\n    geom_point()+\n    geom_errorbar(aes(ymin = mean_severity - sd_severity, ymax = mean_severity + sd_severity, width = 0.01))+\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](Aula15_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  curve3 <- curve |>\n    group_by(Irrigation, rep) |>\n    summarise(audpc = AUDPC(day, severity, \n                            y_proportion = F)) |>\n    pivot_wider(1, names_from = Irrigation,\n              values_from = audpc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0.\nℹ Please explicitly name `id_cols`, like `id_cols = 1`.\n```\n:::\n\n```{.r .cell-code}\n  t.test(curve3$Drip, curve$Furrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Unknown or uninitialised column: `Furrow`.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne Sample t-test\n\ndata:  curve3$Drip\nt = 51.206, df = 2, p-value = 0.0003812\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 12.26473 14.51493\nsample estimates:\nmean of x \n 13.38983 \n```\n:::\n:::\n\n\nExercício:\n\n-Carregando o conjunto de dados, mutando a variável lesion size de categórica para numerica, agrupando as variáveis e resumindo os dados:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-8_6eca9ca12210f3dfb9561dc48334c692'}\n\n```{.r .cell-code}\nlesion_size <- read_excel(\"tan-spot-wheat.xlsx\", \"lesion_size\")\n\nlesion2 <- lesion_size |>\nmutate(lesion_size = as.numeric(lesion_size)) |>\ngroup_by(cult, silicio, hai) |>\nsummarise(mean_lesion = mean(lesion_size), sd_lesion = sd(lesion_size))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'cult', 'silicio'. You can override using\nthe `.groups` argument.\n```\n:::\n:::\n\n\nVisualizando os dados graficamente:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-9_cc7cded95657e27d05c3605873af3aac'}\n\n```{.r .cell-code}\nlesion2 |>\n  ggplot(aes(hai, mean_lesion, color = silicio))+\n  geom_line()+\n  geom_point()+\n    geom_errorbar(aes(ymin = mean_lesion - sd_lesion, \n                     ymax = mean_lesion + sd_lesion), \n                     width = 0.01)+\n    facet_wrap(~cult)+\n  labs(y = \"Lesion size (mm)\",\n       x = \"Hours after inoculation (hai)\", color = \"Treatment\")\n```\n\n::: {.cell-output-display}\n![](Aula15_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-10_a1ca650ad9e25cdd5edcde341c9056e2'}\n\n```{.r .cell-code}\nlesion3 <- lesion_size |>\n  mutate(lesion_size = as.numeric(lesion_size)) |>\n  group_by(exp, cult, silicio, rep) |>\n  summarise(audpc = AUDPC(lesion_size, hai))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'exp', 'cult', 'silicio'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nlesion3 |>\n  ggplot(aes(cult, audpc, color = silicio))+\n  geom_boxplot()+\n  facet_wrap(~ exp)\n```\n\n::: {.cell-output-display}\n![](Aula15_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nTeste:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-11_e0456db8bcf9d06fc512cbf8cfa9f690'}\n\n```{.r .cell-code}\naov1<- aov(audpc ~ exp*cult*silicio, data = lesion3)\nsummary(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Df  Sum Sq Mean Sq F value   Pr(>F)    \nexp               1   54544   54544   0.533 0.470257    \ncult              1  751290  751290   7.335 0.010281 *  \nsilicio           1 9051552 9051552  88.377 3.15e-11 ***\nexp:cult          1   36717   36717   0.359 0.553089    \nexp:silicio       1      49      49   0.000 0.982615    \ncult:silicio      1 1412562 1412562  13.792 0.000689 ***\nexp:cult:silicio  1  143643  143643   1.403 0.244065    \nResiduals        36 3687093  102419                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nSe não der significativo, reduz o modelo:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-12_16e71a4b404d5cb053c07b2a14de2846'}\n\n```{.r .cell-code}\naov1<- aov(audpc ~ cult*silicio, data = lesion3)\nsummary(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Df  Sum Sq Mean Sq F value   Pr(>F)    \ncult          1  751290  751290   7.662  0.00850 ** \nsilicio       1 9051552 9051552  92.315 6.04e-12 ***\ncult:silicio  1 1412562 1412562  14.406  0.00049 ***\nResiduals    40 3922047   98051                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nPara ver se o modelo está correto, checa as premissas:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-13_371ab7b2e9ab2a6241b7606112fe15c4'}\n\n```{.r .cell-code}\nlibrary(performance)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'performance' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Non-normality of residuals detected (p = 0.003).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.040).\n```\n:::\n:::\n\n\nSe não atende as premissas, transforma:\n\n\n::: {.cell hash='Aula15_cache/html/unnamed-chunk-14_65d762191c5179ce406599c700ed5a82'}\n\n```{.r .cell-code}\naov1<- aov(sqrt(audpc) ~ cult*silicio, data = lesion3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in sqrt(audpc): NaNs produzidos\n```\n:::\n\n```{.r .cell-code}\nsummary(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Df Sum Sq Mean Sq F value   Pr(>F)    \ncult          1  294.0   294.0   13.51 0.000712 ***\nsilicio       1 2363.9  2363.9  108.65 7.81e-13 ***\ncult:silicio  1  526.5   526.5   24.20 1.62e-05 ***\nResiduals    39  848.6    21.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n1 observation deleted due to missingness\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.146).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.638).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'emmeans' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nm1 <- emmeans(aov1, ~ cult | silicio, type = \"response\")\nm1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsilicio = Si-:\n cult      response    SE df lower.CL upper.CL\n Horizonte     1440 106.8 39     1233     1664\n Quartzo       1537 110.3 39     1322     1768\n\nsilicio = Si+:\n cult      response    SE df lower.CL upper.CL\n Horizonte      897  84.2 39      735     1075\n Quartzo        296  50.7 39      202      407\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}