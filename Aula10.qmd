---
title: "Aula10"
author: "Nívia"
format: html
---

# Anova - 1 fator

Quando se trabalha com 2 tratamentos, os passos para seguir são: Teste de normalidade - shapiro.test, seguido de var.test, que se o p-valor der menor que 0,05 realiza testes não paramétricos (Mann-Whitney e Wilcoxon). Caso o p-vallor seja maior que 0,05, realiza-se o t.test ----\> var.equal = F.

## Anova com 1 fator

Pergunta a ser resposndida: Há efeito da espécie no crescimento micelial?

```{r}
library(readxl)
library(tidyverse)
micelial <- read_excel("dados-diversos.xlsx", "micelial")
head(micelial)

```

```{r}
micelial |>
  ggplot(aes(especie, tcm))+
  geom_boxplot()
```

###Usando AOV

Cria um novo modelo para atribuir a função aov() contendo os argumentos (tcm em função de espécie). Depois disso, resume o novo modelo criado com a função summary.

```{r}
aov1 <- aov(tcm ~ especie, data = micelial)
summary(aov1)
```

Conclusão: Nesse conjunto de dados, não há diferença na media micelial (não há efeito significativo da espécie sobre o cresc. micelial).

### Testando as premissas

Depois de fazer a anova, testa-se as premissas. É mais importante os dados serem homogeneos do que normais. Testando as premissas da anova - de normalidade e homocedasticidade do modelo: Para testar as premissas, é necessário instalar e carregar o pacote performance e o pacote DHARMa. O pacote performance permite checar as premissas (check\_), já o pacote DHARMA ((Distributed Hierarchical Accumulation of Residuals for Generalized Linear Models in R) é para visualizar os dados pelo diagnóstico do resíduo (O pacote DHARMa permite faz uma comparação dos resíduos simulados, que são gerados pelo pacote, com os resíduos observados) e ver graficamente quando a distribuição dos dados não é normal e/ou quando há variação heterocedástica.

```{r}
library(performance)
check_heteroscedasticity(aov1)
check_normality(aov1)
library(DHARMa)
hist (aov1$residuals)
qqnorm(aov1$residuals)
qqline(aov1$residuals)
plot(simulateResiduals(aov1))
shapiro.test(aov1$residuals)
```

## Novo conjunto de dados - Dados não paramétricos

Abrir um conjunto de dados que está no R chamado InsectSprays.

```{r}
insects <- as_tibble(InsectSprays) |>
  select(spray, count)
```

```{r}
insects |>
  ggplot(aes(spray, count))+
  geom_boxplot()
```

Rodando o modelo de anova: como os dados, aparentemente - pelo visual do gráfico - apresentaram-se não paramétricos, roda-se a anova e testa-se as premissas para confirmação.

```{r}
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
```

Interpretação: dados não são normais e homogeneos.

### Alternativas para dados não paramétricos:

Quando se tem dados não paramétricos, tem-se 3 alternativas - transformar os dados (raiz quadrada, log, etc); usar testes não paramétricos (Kruskal) ou usar modelos lineares generalizados (melhor opção).

1.  Transformar os dados para normalizar: Usa-se a raiz quadrada para tentar noprmalizar e tornar os dados normais e homogenos. Pode-se também tentar o log da variável resposta + 0.5.

```{r}
aov2 <- aov(sqrt(count) ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
```

2.  Se não normalizar e os dados ainda forem heterogenos, usa-se testes não paramétricos. Tem 2 opções de teste Kruskal. Para usar essa opção, é necessário baixar e carregar o pacote agricolae.

```{r}
kruskal.test(count ~ spray, data = insects)
library(agricolae)
kruskal(insects$count, insects$spray, 
        console = TRUE)
```

#### Pacote emmeans

O pacote emmeans ("estimated marginal means", ou médias marginais estimadas) é usado para realizar testes de comparação de médias entre grupos, ajustando para outros fatores importantes que podem influenciar as médias. O pacote é particularmente útil em modelos lineares generalizados (GLM).

Função emmeans - tirar a média da variável inseticida: Para dar o valor original da média e não o valor transformado, usa-se a função type = response. A função pwpm gera uma tabela de comparação das médias e cld é uma função que serve para gerar os números que diferenciam os grupos de médias.

```{r}
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
library(emmeans)
aov2_means <- emmeans(aov2, ~ spray,
                         type = "response")
aov2_means
pwpm(aov2_means)
library(multcomp)
library(multcompView)
cld(aov2_means)
```

3.  GLM A terceira opção é a geração de modelos lineares generalizados. Para publicação de artigos, essa é a opção mais aconselhável, é mais elegante do que transformar os dados. Para visualizar, pode usar o pacote Dharma e puxar um plot.

```{r}
glm1 <- glm(count ~spray,
             data = insects,
             family = poisson(link = "identity"))
plot(simulateResiduals(glm1))
summary(glm1)
glm1_means <- emmeans(glm1, ~ spray)
cld(glm1_means)

```
