{
  "hash": "53d7a28e966514115825e17cb218f468",
  "result": {
    "markdown": "---\ntitle: \"Gráficos 2\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# Gráficos de dispersão, histograma e gráfico de densidade\n\n## Scatterplots\n\nUm Scatterplot exibe a relação entre 2 variáveis numéricas, ajudando a identificar padrões ou correlações entre elas, cada ponto representa uma observação. Os gráficos de dispersão são frequentemente usados para representar dados que possuem duas variáveis contínuas, como comprimento e largura, tempo e velocidade, ou temperatura e umidade. A sua posição no eixo X (horizontal) e Y (vertical) representa os valores das 2 variáveis (primeiro aplica a variável x e depois a y). Usando ggplot2, os gráficos de dispersão são construídos usando a função geom_point. A função geom_point() compreende a seguinte estética:\n\n-   [alpha]{.underline}: trabalha com a transparência dos pontos (pontos ficam mais transparentes e ajuda caso haja sobreposição);\n\n-   [colour]{.underline}: usada adicionar cor usa-se a (função color = nome da cor);\n\n-   fill: define a cor. O nome da cor, por ser texto, deve ser escrita entre aspas;\n\n-   shape: utilizada para adicionar diferentes formas ou tipos de marcadores para diferenciar as variáveis (ex. quadrado e triângulo);\n\n-   Size: define o tamanho do box, retorna um vetor numérico de comprimento length(x ).\n\n**Importação dos dados**: Para atribuir os dados de uma aba especifica do excel, usa-se o nome da aba e após isso a função read_excel seguido do nome do arquivo excel entre aspas (endereço) e logo após insere a vírgula e o nome da aba dos dados (também pode ser usado o número da aba de dados). O data frame deve ter o mesmo nome da aba quando for ser atribuido.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-1_ae0b475fc8af0d0ee992016521f81c72'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nfungicida_campo <- read_excel(\"dados-diversos.xlsx\", \n                              \"fungicida_campo\")\n```\n:::\n\n\n**Visualização**: Depois, plota-se os dados definindo-se o eixo x e depois o eixo y. Usa-se o stat_summary para plotar a média de forma simples.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-2_619724f80331c63216dfcf6fddc5fdbc'}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(trat, sev))+\n  geom_jitter(width = 0.1,\n              color = \"gray60\")+\n  stat_summary(fun = mean,\n               color = \"red\")\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nPara plotar a média de forma rápida e não precisar do by_summurise = mean_se.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-3_ae4bd69d2ef3783ffd72c09f05b0a76e'}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(trat, sev))+\n  geom_jitter(width = 0.1,\n              color = \"gray60\")+\n  stat_summary(fun.data = mean_se,\n               color = \"red\")\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nMudando o eixo x para yld, um das variáveis do banco de dados fungicida_campo. Se inserir a função alpha dentro da função geom_point, os pontos ficam mais transparentes.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-4_785bdd8a43ce523fddb4d7c3ba92873c'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\nfungicida_campo |> \n  ggplot(aes(sev, yld,\n             color = trat))+\n  geom_point(size = 3)+\n  scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n*Linha de tendência*: para criar uma linha de tendência, usa-se a função geom_smooth. Para retirar o erro, usa-se a função se = FALSE e linetype. Method lm ajusta os dados a função linear.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-5_fe5e3966f19ec19ac264fa71f0fd97a7'}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(sev, yld))+\n  geom_point(size = 3)+\nscale_color_colorblind()+\ngeom_smooth(method = \"lm\",\n            se = FALSE,\n            color = \"black\",\n            linetype = \"solid\",\n            size = 2)\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Gráficos de dispersão para análise fatorial\n\nMudando o subconjunto de dados para milho: Ver a variação da produtividade dos hibridos de milho em função dos métodos de inoculação.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-6_e939c1317b35c176725f97be2d307e70'}\n\n```{.r .cell-code}\nmilho <- read_excel(\"dados-diversos.xlsx\", \"milho\")\nmilho |>\n  ggplot(aes(hybrid, yield, color = method))+\n  geom_jitter(size = 2)+\n  facet_wrap(~hybrid)\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ou, para ver qual hibrido dá mais doença:\nmilho |>\n  ggplot(aes(method, index, color = method))+\n  geom_jitter(size = 2)+\n  facet_wrap(~hybrid)\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n## Histogramas\n\nPara construir histogramas, usamos o geom_histogram. Esse geom só precisa do atributo x (o eixo y é construído automaticamente). Histogramas são úteis para avaliarmos a distribuição de uma variável. São frequentemente usados para representar dados contínuos, como medidas físicas, tempo, idade ou outras variáveis que podem ser divididas em intervalos. Os histogramas ajudam a visualizar a forma da distribuição de dados contínuos, incluindo informações sobre tendência central, variabilidade e assimetria. A função geom_histogram() suporta as seguintes estéticas:\n\n-   Bins = refere-se ao número de barras presente no gráfico.\n\n-   Color = função usada para mudar a cor da linha do bloco.\n\n-   Fill = função para mudar a cor dos blocos.\n\nAgora, montaremos um histograma brabalhando com 1 variável continua (produtividade). No histograma, tem-se os valores organizados em classe. Qual o padrão de distribuição dos pontos?\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-7_afbadb484b93a902042af477e7dc9951'}\n\n```{.r .cell-code}\np_yield <- milho |>\n  ggplot(aes(x = yield))+\n  geom_histogram(bins = 10, color = \"black\", fill = \"green\")\n```\n:::\n\n\nMudando de yield para index:\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-8_42966d052de508dec9c048c178c515d5'}\n\n```{.r .cell-code}\np_index <- milho |>\n  ggplot(aes(x = index))+\n  geom_histogram(bins = 10, color = \"black\", fill = \"blue\")\n```\n:::\n\n\nCombinando gráficos com patchowork: deve-se primeiro definir um nome para cada gráfico\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-9_3efc837c99a8993ad1a0533c6734fcd7'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n(p_yield + p_index)+\nplot_annotation(tag_levels = \"A\")\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"figs/histograms.png\", bg = \"white\")\n```\n:::\n\n\n## Gráfico de densidade\n\nGráficos de densidade podem ajudar a identificar padrões, tendências, assimetrias e são geralmente usados para representar a distribuição de probabilidade de uma variável contínua (ex.:distribuição de alturas ou pesos de uma população, distribuição de pontuações em um teste padronizado). Para esse tipo de gráfico, a função a ser utilizada é geom_density().\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-10_1150443c0910cca63b0f7d8514019a58'}\n\n```{.r .cell-code}\nmilho |>\n  ggplot(aes(x = index))+\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Gráfico de colunas\n\nTestando um novo subconjunto de dados: criou-se um gráfico de colunas, onde, no x tem-se inseticida e y é o status. Alterado de formato largo para longo.\n\n\n::: {.cell hash='Aula6_cache/html/unnamed-chunk-11_8168616e987f67921e30ef41f178c9c6'}\n\n```{.r .cell-code}\ninsect <- read_excel(\"dados-diversos.xlsx\", \"mortalidade\")\ninsect |>\n  pivot_longer(2:3,\n               names_to = \"status\",\n               values_to = \"value\") |>\n  ggplot(aes(inseticida, value, fill = status))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}