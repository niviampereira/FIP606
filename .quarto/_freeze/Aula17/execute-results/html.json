{
  "hash": "b8a5f0f091974fad4f112dfa8362ce4b",
  "result": {
    "markdown": "---\ntitle: \"Aula17\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# Regressçao não-linear\n\nQuando os dados não seguem um padrão linear, é necessário usar técnicas de regressão não linear para capturar a relação não linear entre as variáveis.\n\nRegressão não-linar para determinação de EC50:\n\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-1_2d27fb2c687b17d0ca6a4424e1524e73'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(gsheet)\n```\n:::\n\n\nDados: usar o caminho do conjunto de dados sensibilidade a fungicidas, localizado na pasta do drive.\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-2_920fe6edb42622a37d0c675828900c75'}\n\n```{.r .cell-code}\ndat <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/15pCj0zljvd-TGECe67OMt6sa21xO8BqUgv4d-kU8qi8/edit#gid=0\")\n```\n:::\n\n\nTrabalhando os dados:\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-3_fd04d717f9537bb469dee2761508ac72'}\n\n```{.r .cell-code}\noptions(scipen=999)\ndat2 <- dat |> \n  select(-Isolate, -Population) |>\n  group_by(Code, Year, Dose) |>\n  summarise(GC_mean = mean(GC))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Code', 'Year'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\nO comando options(scipen=999) define a opção scipen para o valor 999. A opção scipen é usada para controlar a exibição de números científicos em notação exponencial. Definir scipen como 999 desativa a notação exponencial e exibirá os números completos.\n\nEsse bloco de comandos realiza uma sequência de operações no dataframe dat:\nRemove as colunas \"Isolate\" e \"Population\" (a coluna \"Isolate\" e a coluna \"Population\" não estarão presentes no resultado dat2).\nAgrupa os dados restantes por \"Code\", \"Year\" e \"Dose\".\nCalcula a média da coluna \"GC\" para cada grupo e armazena os resultados na coluna \"GC_mean\" em um novo dataframe chamado date, ou seja, summarise(GC_mean = mean(GC)) está sendo utilizado para calcular a média da coluna \"GC\" dentro de cada grupo definido pelas colunas \"Code\", \"Year\" e \"Dose\". A média resultante é atribuída a uma nova coluna chamada \"GC_mean\" no dataframe resultante.\n\n\nPara fazer um gráfico só com um dos isolados:\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-4_dd2b4f59fdd9a9ab6d955b1d1c675ef4'}\n\n```{.r .cell-code}\nFGT152 <- dat2 |>\n  filter(Code == \"FGT152\")\n\nFGT152 |>\n  ggplot(aes(factor(Dose), GC_mean))+\n  geom_point()+\n  geom_line()+\n  facet_wrap(~ Code)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n:::\n\n::: {.cell-output-display}\n![](Aula17_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nCriou-se um gráfico usando o dataframe FGT152, que é um subconjunto dos dados filtrados do dat2. O gráfico mostra os valores de \"GC_mean\" em relação a \"Dose\" para o código \"FGT152\", com pontos e uma linha contínua. Os painéis separados são criados para cada nível único de \"Code\", mas neste caso, como só há \"FGT152\", há apenas um painel.\n\n\n## EC50 com pacote DRC\n\nO pacote DRC é especialmente útil para ajustar modelos de regressão dose-resposta e realizar análises estatísticas relacionadas. Ele oferece modelos para ajustar curvas de dose-resposta, incluindo modelos log-logísticos, log-probit, Weibull, etc. O pacote fornece funções para calcular estimativas de EC50.\n\n### Modelos\n\nModelo log.logistico3: o modelo de três parâmetros log-logístico descreve a relação entre a dose de um agente ou tratamento e a resposta biológica.\nEsse modelo assume uma resposta crescente ou decrescente com a dose e é frequentemente usado quando se espera uma resposta em forma de curva em S ou uma resposta em forma de S invertido.\n\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-5_4fcc4a283d640085436ad83e718b2ba4'}\n\n```{.r .cell-code}\nlibrary(drc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'drc' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: MASS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'MASS'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'drc' has been loaded.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPlease cite R and 'drc' if used for a publication,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nfor references type 'citation()' and 'citation('drc')'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'drc'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    gaussian, getInitial\n```\n:::\n\n```{.r .cell-code}\ndrc1 <- drm(GC_mean ~ Dose, data = FGT152,\n            fct = LL.3())\nAIC(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 33.60846\n```\n:::\n\n```{.r .cell-code}\nsummary(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value     p-value    \nb:(Intercept)  0.401905   0.053427  7.5225    0.001672 ** \nd:(Intercept) 47.540342   1.459890 32.5643 0.000005302 ***\ne:(Intercept)  7.220130   2.340119  3.0854    0.036739 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.993805 (4 degrees of freedom)\n```\n:::\n\n```{.r .cell-code}\nplot(drc1)\n```\n\n::: {.cell-output-display}\n![](Aula17_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nED(drc1, 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   7.2201     2.3401\n```\n:::\n:::\n\nO comando drc1 <- drm(GC_mean ~ Dose, data = FGT152, fct = LL.3()) : esses comandos são utilizados para ajustar um modelo de regressão de dose-resposta usando a função drm() da biblioteca 'drc' (dose-response modeling). O argumento GC_mean ~ Dose especifica que a variável resposta é \"GC_mean\" e a variável preditora é \"Dose\". O argumento data = FGT152 indica que os dados para ajuste do modelo são provenientes do dataframe FGT152. O argumento fct = LL.3() especifica o tipo de modelo a ser ajustado, neste caso, um modelo de três parâmetros log-logístico (LL.3()).\nAIC(drc1) é a função que utilizamos para calcular o AIC para o modelo ajustado. O AIC é uma medida que avalia a qualidade relativa do modelo, considerando a qualidade do ajuste e a complexidade do modelo. Quanto menor o valor do AIC, melhor o ajuste.\nA função ED(drc1, 50): calcula a dose efetiva (ED) para um determinado nível de resposta, neste caso, 50%. O comando ED() é usado para calcular as doses efetivas para um modelo de regressão de dose-resposta. O argumento drc1 especifica o modelo ajustado e o argumento 50 indica o nível de resposta desejado (50% neste caso).\n\n\nModelo W1.3: tem melhor ajuste atraves do AIC. Esse modelo permite uma maior flexibilidade na modelagem da forma da curva de resposta em relação à dose, pois inclui o parâmetro de assimetria (g). Esse parâmetro permite que a curva de resposta seja assimétrica, podendo assumir formas como curvas em forma de S assimétricas.\n\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-6_c51f19bf72f7f50e6337cd5fd129dc28'}\n\n```{.r .cell-code}\ndrc1 <- drm(GC_mean ~ Dose, data = FGT152,\n            fct = W1.3())\nAIC(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 37.75192\n```\n:::\n\n```{.r .cell-code}\nsummary(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nModel fitted: Weibull (type 1) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value    p-value    \nb:(Intercept)  0.28354    0.04760  5.9567   0.003987 ** \nd:(Intercept) 48.38112    2.09996 23.0390 0.00002103 ***\ne:(Intercept) 30.12379   12.58003  2.3946   0.074796 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.680509 (4 degrees of freedom)\n```\n:::\n\n```{.r .cell-code}\nplot(drc1)\n```\n\n::: {.cell-output-display}\n![](Aula17_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nED(drc1, 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   8.2704     3.6719\n```\n:::\n:::\n\n\n## Pacote ec50estimator\n\nFornece os valores de EC50 para os dados. É útil para comparar as estimativas de EC50 entre diferentes identificadores (ID) e identificar possíveis diferenças na resposta à dose.\n\n\n::: {.cell hash='Aula17_cache/html/unnamed-chunk-7_bf32c8d5dc384b831e5402dcad31ba7e'}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ec50estimator' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\ndf_ec50 <- estimate_EC50(GC_mean ~ Dose,\n                         data = dat2,\n                         isolate_col = \"Code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\n\ndf_ec50 |>\n  ggplot(aes(Estimate, reorder(ID, Estimate)))+\n  geom_point()+\n  geom_errorbar(aes(xmin = Lower,\n                    xmax = Upper), width = 0.1)+\n  xlim(0,30)\n```\n\n::: {.cell-output-display}\n![](Aula17_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nA função estimate_EC50() é utilizada para estimar os valores de EC50 a partir dos dados. Dentro dessa função são usados varios argumentos, esses argumentos possuem diferentes papeis na função:\nO isolate_col = \"Code\" foi usado para definir a coluna \"Code\" como uma coluna de identificação única para diferentes amostras.\nO interval = \"delta\" define o tipo de intervalo de confiança que deverá ser calculado para as estimativas de EC50.\no comando fct = drc::LL.3() especifica o modelo de ajuste, neste caso, o modelo de três parâmetros log-logístico.\nDentro do ggplot e da função aes o argumento (Estimate, reorder(ID, Estimate)) especifica as variáveis a serem mapeadas nos eixos x e y do gráfico. \"Estimate\" corresponde aos valores estimados de EC50 e \"ID\" é reordenado de acordo com os valores de Estimate para controlar a ordem no gráfico.\nNesse caso, a função geom_errorbar adiciona barras de erro ao gráfico, utilizando os valores inferiores (Lower) e superiores (Upper) dos intervalos de confiança das estimativas de EC50. O xlim(0,30) define os limites do eixo x do gráfico, limitando o intervalo de visualização das estimativas até 30.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}