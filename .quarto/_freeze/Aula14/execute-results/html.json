{
  "hash": "2358e656f96ddf9a4fcb8423915f8143",
  "result": {
    "markdown": "---\ntitle: \"Aula14\"\nauthor: \"Nívia\"\nformat: html\n---\n\n\n# Análise de Correlação\nA análise de correlação é usada para avaliar a força e a direção da relação entre duas variáveis contínuas. Ela mede o grau de associação linear entre as variáveis, ou seja, o quanto as variáveis se movem juntas em uma relação linear. A medida mais comum de correlação é o coeficiente de correlação de Pearson, que varia de -1 a +1. Um valor próximo de +1 indica uma forte correlação positiva, um valor próximo de -1 indica uma forte correlação negativa, e um valor próximo de zero indica uma correlação fraca ou inexistente. A análise de correlação não implica causalidade, apenas indica a presença e a intensidade da relação linear entre as variáveis.\n\nCarregando Pacotes:\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-1_c80334d5d795bd9157cbcb49b49abb63'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(ggplot2)\n```\n:::\n\n\nConjunto de dados:\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-2_c02daa7ed860dbf79fd23628772dfa4e'}\n\n```{.r .cell-code}\nestande <- read_excel(\"dados-diversos.xlsx\", \"estande\")\n\nestande |>\n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  facet_wrap(~ exp)+\n  ylim(0,max(estande$nplants))+\n  geom_smooth(se =  F)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n## Ajustando modelo linear simples e quadratico:\n\nUtiliza-se a função lm() para ajustar o modelo linear. Essa função recebe a fórmula do modelo e os dados como argumentos. A fórmula especifica a relação entre a variável dependente e a variável independente. Por exemplo, se sua variável dependente for \"y\" e sua variável independente for \"x\", a fórmula seria y ~ x. A função lm() retornará um objeto do tipo \"lm\" que representa o modelo ajustado.\nUsa-se a função summary() para obter uma visão geral dos resultados do modelo ajustado. Isso inclui os coeficientes estimados, estatísticas de ajuste (como o coeficiente de determinação R²), valores-p e outros diagnósticos do modelo.\n\n1. Ver qual que se adapta melhor.\n\nFiltrar o experimento 2:\nO group_by vai agrupar pelos tratamentos e o summarise vai dar a média do número de plantas. Se eu quiser seguir a linha em cima dos pontos eu posso colocar o argumento span = 0.7 dentro da função geom_smooth. \nO R ao quadrado da regressão linear simples é o coeficiente de determinação.\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-3_baede9e6ce89a3e984c5ad94a6ea9868'}\n\n```{.r .cell-code}\nestande2 <- estande |>\n  filter(exp ==2) |>\n  group_by(trat) |>\n  summarise(mean_nplants = mean(nplants))\n  \nestande2|>\n  ggplot(aes(trat, mean_nplants))+\n  geom_point()+\n  #geom_line()\n  geom_smooth(formula = y ~ poly(x, 2), method = \"lm\", color = \"black\")+\n  annotate(geom = \"text\", \n           x = 25, y = 70,\n           label = \"y = 66.3 - 1.777x + 0.0222x2\n           R2 = 0.0.88\")\n```\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nOlhando o ajuste do modelo quadrático:\n\nPara ajustar os dados a um modelo linear quadrático, basta utilizar a função lm(). A diferença é que precisará adicionar a variável independente ao quadrado na fórmula do modelo. Por exemplo, se sua variável dependente for \"y\" e sua variável independente for \"x\", a fórmula seria y ~ x + I(x^2). A função I() é usada para indicar uma operação especial, neste caso, elevar \"x\" ao quadrado. A função lm() retornará um objeto do tipo \"lm\" que representa o modelo ajustado.\n\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-4_4ce56338743f246cfe270abd12a73e5b'}\n\n```{.r .cell-code}\nestande2 <- estande2 |>\n  mutate(trat2 = trat^2)\n  m1 <- lm(mean_nplants ~ trat, data = estande2)\nsummary(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean_nplants ~ trat, data = estande2)\n\nResiduals:\n     1      2      3      4      5      6 \n12.764 -2.134 -6.782 -3.327 -4.669  4.147 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  60.9857     4.5505  13.402 0.000179 ***\ntrat         -0.7007     0.2012  -3.483 0.025294 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.117 on 4 degrees of freedom\nMultiple R-squared:  0.752,\tAdjusted R-squared:   0.69 \nF-statistic: 12.13 on 1 and 4 DF,  p-value: 0.02529\n```\n:::\n\n```{.r .cell-code}\nhist(m1$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nm2 <- lm(mean_nplants ~ trat + trat2,\n         data = estande2)\nsummary(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean_nplants ~ trat + trat2, data = estande2)\n\nResiduals:\n      1       2       3       4       5       6 \n 7.4484 -4.4200 -6.4386  1.0739  3.0474 -0.7111 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 66.30156    4.70800  14.083 0.000776 ***\ntrat        -1.77720    0.62263  -2.854 0.064878 .  \ntrat2        0.02223    0.01242   1.790 0.171344    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.517 on 3 degrees of freedom\nMultiple R-squared:  0.8801,\tAdjusted R-squared:  0.8001 \nF-statistic: 11.01 on 2 and 3 DF,  p-value: 0.04152\n```\n:::\n\n```{.r .cell-code}\nAIC(m1, m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   df      AIC\nm1  3 45.72200\nm2  4 43.36151\n```\n:::\n:::\n\n\n# Duas variáveis resposta\n\nQuando se tem 2 variáveis resposta do tipo numerica continia, estuda-se a relação das 2 respostas.\nNa análise de correlação, da-se o coeficiente de correlação de pearson (R). O R vai ser sempre maior que o R ao quadrado. \n\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-5_49adb2a0f9f62cb6336752c91cd8f38f'}\n\n```{.r .cell-code}\nmofo <- read_excel(\"dados-diversos.xlsx\", \"mofo\")\n\nmofo |>\n  ggplot(aes(inc, yld))+\n  geom_point()+\n  geom_smooth(se = F, method = \"lm\")+\n  facet_wrap(~ study)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nPara calcular o coeficiente de correlação: função cor.test\n\nFiltrando o experimento 1:\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-6_76186ca54e3bb77b33baad6c1e439d0f'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==1)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1     1    76  2194  2265\n 2     1     2    53  1663  2618\n 3     1     3    42  1313  2554\n 4     1     4    37  1177  2632\n 5     1     5    29   753  2820\n 6     1     6    42  1343  2799\n 7     1     7    55  1519  2503\n 8     1     8    40   516  2967\n 9     1     9    26   643  2965\n10     1    10    18   400  3088\n11     1    11    27   643  3044\n12     1    12    28   921  2925\n13     1    13    36  1196  2867\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -6.8451, df = 11, p-value = 2.782e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9699609 -0.6921361\nsample estimates:\n       cor \n-0.8999278 \n```\n:::\n:::\n\nFiltrando o experimento 2:\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-7_f10921d2fa8075022b84be466eb1c33a'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==2)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     2     1    76  1331  2257\n 2     2     2    44   756  2393\n 3     2     3    24   338  2401\n 4     2     4    33   581  2568\n 5     2     5    37   588  2320\n 6     2     6    34   231  2308\n 7     2     7    31   925  2389\n 8     2     8    16   119  2614\n 9     2     9    10   394  2681\n10     2    10     8   206  2694\n11     2    11    15   275  2674\n12     2    12     7   131  2666\n13     2    13    19   588  2454\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -4.6638, df = 11, p-value = 0.0006894\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9426562 -0.4790750\nsample estimates:\n       cor \n-0.8149448 \n```\n:::\n:::\n\n\nFiltrando o experimento 4 (study = 4):\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-8_0054916d221d1af2b55195448da232c0'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==4)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     4     1    69  6216  1893\n 2     4     2    39  2888  2451\n 3     4     3    41  2272  2232\n 4     4     4    39  2868  2609\n 5     4     5    40  2412  2383\n 6     4     6    40  2372  2480\n 7     4     7    44  3424  2577\n 8     4     8    43  1744  2367\n 9     4     9    26  1456  2769\n10     4    10    29  1732  2907\n11     4    11    30  1080  2298\n12     4    12    34  1592  2976\n13     4    13    44  3268  2200\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -3.7242, df = 11, p-value = 0.003357\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9194503 -0.3327077\nsample estimates:\n       cor \n-0.7467931 \n```\n:::\n:::\n\nFiltrando o experimento 3 (study = 3):\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-9_182f52e51d6e89ab2b96c92759008df5'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==3)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     3     1    65  5013  2839\n 2     3     2    33  3619  3375\n 3     3     3    40  2325  3264\n 4     3     4    35  2588  3301\n 5     3     5    48  3969  3220\n 6     3     6    31  1556  3321\n 7     3     7    39  3175  3229\n 8     3     8    25  1763  3517\n 9     3     9    26  2894  3595\n10     3    10    21   350  3702\n11     3    11    23   419  3652\n12     3    12    25   644  3608\n13     3    13    33  2850  3334\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -10.9, df = 11, p-value = 3.105e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9872663 -0.8579544\nsample estimates:\n      cor \n-0.956692 \n```\n:::\n:::\n\nPara gerar matriz de correlação para as variáveis selecionadas:\n\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-10_cf116532dfec4c209ca8ae8f5ee1ede5'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==3)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     3     1    65  5013  2839\n 2     3     2    33  3619  3375\n 3     3     3    40  2325  3264\n 4     3     4    35  2588  3301\n 5     3     5    48  3969  3220\n 6     3     6    31  1556  3321\n 7     3     7    39  3175  3229\n 8     3     8    25  1763  3517\n 9     3     9    26  2894  3595\n10     3    10    21   350  3702\n11     3    11    23   419  3652\n12     3    12    25   644  3608\n13     3    13    33  2850  3334\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -10.9, df = 11, p-value = 3.105e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9872663 -0.8579544\nsample estimates:\n      cor \n-0.956692 \n```\n:::\n\n```{.r .cell-code}\ncor(mofo1 |> select(3:5))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           inc        scl       yld\ninc  1.0000000  0.8441514 -0.956692\nscl  0.8441514  1.0000000 -0.836512\nyld -0.9566920 -0.8365120  1.000000\n```\n:::\n:::\n\nPara gerar gráfico de correlação: \nUsa-se o pacote \"corrplot\", que fornece funções para visualizar e analisar matrizes de correlação. Ele é frequentemente usado para explorar a relação entre variáveis e identificar padrões de correlação em conjuntos de dados. Ele oferece uma variedade de gráficos e opções de personalização para representar as correlações de maneira visualmente atraente.\nPrincipais funções:\n---- corr.test(): Essa função realiza testes estatísticos de correlação para matrizes de correlação, calcula estatísticas de correlação, valores-p e intervalos de confiança para avaliar a significância das correlações.\n\n---- corrplot(): Essa função cria uma matriz de plotagem de correlação que permite ajustar diferentes tipos de gráficos, como gráficos de matriz de correlação, gráficos de círculo de correlação, gráficos de barra de correlação e muito mais. Também oferece opções para personalizar cores, adicionar números de correlação e realizar agrupamentos hierárquicos.\nExistem sete métodos de visualização (parâmetro method) no pacote corrplot, denominados 'circle', 'square', 'ellipse', 'number' (números de coeficientes com cores diferentes), 'shade', 'color', 'pie'. A intensidade da cor do glifo é proporcional aos coeficientes de correlação por configuração de cor padrão.\nExistem três tipos de layout (parâmetro type): 'full', 'upper'e 'lower'.\n\n\n\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-11_b27c5653ff367f2ab112792bb27384bd'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==3)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     3     1    65  5013  2839\n 2     3     2    33  3619  3375\n 3     3     3    40  2325  3264\n 4     3     4    35  2588  3301\n 5     3     5    48  3969  3220\n 6     3     6    31  1556  3321\n 7     3     7    39  3175  3229\n 8     3     8    25  1763  3517\n 9     3     9    26  2894  3595\n10     3    10    21   350  3702\n11     3    11    23   419  3652\n12     3    12    25   644  3608\n13     3    13    33  2850  3334\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  mofo1$inc and mofo1$yld\nt = -10.9, df = 11, p-value = 3.105e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9872663 -0.8579544\nsample estimates:\n      cor \n-0.956692 \n```\n:::\n\n```{.r .cell-code}\npcor <- cor(mofo1 |> select(3:5))\n\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'corrplot' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ncorrplot 0.92 loaded\n```\n:::\n\n```{.r .cell-code}\ncorrplot(pcor, method = 'number', type = \"lower\")\n```\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nQuando os dados estão ordinais (variável ordinal) usa-se o método de Kendall. Usa-se correlação que não é de Person, quando não assume normalidade. Person é o método padrão.\n\n::: {.cell hash='Aula14_cache/html/unnamed-chunk-12_93cca13b936997b448456040fdbce49a'}\n\n```{.r .cell-code}\nmofo1 <- mofo |>\n  filter(study ==3)\nmofo1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 5\n   study treat   inc   scl   yld\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     3     1    65  5013  2839\n 2     3     2    33  3619  3375\n 3     3     3    40  2325  3264\n 4     3     4    35  2588  3301\n 5     3     5    48  3969  3220\n 6     3     6    31  1556  3321\n 7     3     7    39  3175  3229\n 8     3     8    25  1763  3517\n 9     3     9    26  2894  3595\n10     3    10    21   350  3702\n11     3    11    23   419  3652\n12     3    12    25   644  3608\n13     3    13    33  2850  3334\n```\n:::\n\n```{.r .cell-code}\nshapiro.test(mofo1$inc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  mofo1$inc\nW = 0.87111, p-value = 0.05412\n```\n:::\n\n```{.r .cell-code}\nshapiro.test(mofo1$yld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  mofo1$yld\nW = 0.92193, p-value = 0.2663\n```\n:::\n\n```{.r .cell-code}\ncor.test(mofo1$inc, mofo1$yld, method = \"spearman\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in cor.test.default(mofo1$inc, mofo1$yld, method = \"spearman\"):\nImpossível calcular o valor exato de p com empates\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tSpearman's rank correlation rho\n\ndata:  mofo1$inc and mofo1$yld\nS = 715.97, p-value = 7.166e-08\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n       rho \n-0.9669458 \n```\n:::\n\n```{.r .cell-code}\npcor <- cor(mofo1 |> select(3:5), method = \"spearman\")\n\nlibrary(corrplot)\ncorrplot(pcor, method = 'number', type = \"lower\")\n```\n\n::: {.cell-output-display}\n![](Aula14_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}