{"title":"Tabela de contingência e AUDPC","markdown":{"yaml":{"title":"Tabela de contingência e AUDPC","author":"Nívia","format":"html"},"headingText":"Variáveis categóricas e tabelas de contingência","containsRefs":false,"markdown":"\n\n\nNo caso de variáveis resposta categóricas, não se tira a média dos dados, ao invés disso, se monta uma tabela de contigência. As tabelas são usadas para resumir e apresentar a distribuição conjunta de duas ou mais variáveis categóricas. Elas são muito úteis para analisar a relação entre essas variáveis e identificar possíveis associações ou dependências.\n\nAs tabelas de contingência são bastante utilizadas em estatística descritiva, análise exploratória de dados e testes de associação, como o teste qui-quadrado. Essas tabelas de contingência podem ser visualizadas por meio de gráfico de barras/colunas, pois é melhor para a compreensão da distribuição conjunta das variáveis, se visualiza a frequência de ocorrências, quando se tem variáveis categóricas nominais.\n\n```{r}\n#| warning: false\n#| message: false\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(epifitter)\n```\n\n*Função table()*: Essa função é utilizada para criar a tabela de contingência. A tabela é construída a partir das variáveis residue e species (pertencentes ao objeto survey. A função table() conta o número de ocorrências de cada combinação de categorias dessas variáveis e armazena os resultados na variável q.\n\n```{r}\nsurvey <- read_excel(\"dados-diversos.xlsx\",\"survey\")\nsurvey |>\n  count(year)\nq <- table(survey$residue, survey$species)\n```\n\n*Pacote janitor*: O pacote janitor fornece funções úteis para limpeza e organização de dados, como: renomear colunas, remover valores ausentes, formatar dados em uma estrutura tabular, etc. Para dar os valores em porcentagem usa-se a função adorn_percentages(). A função tabyl() cria uma tabela de frequência tabular, mostrando a contagem de ocorrências de diferentes combinações de valores em variáveis categóricas.\n\n```{r}\n#library(janitor)\nsurvey |>\n  tabyl(year, species)\n```\n\n**Visualizando os dados**:\n\n```{r}\nsurvey |>\n  filter(residue != \"NA\") |>\n  count(residue, species) |>\n  ggplot(aes(residue, n, fill = species))+\n  geom_col()\n```\n\n## Teste qui-quadrado\n\nO teste qui-quadrado é utilizado para avaliar a associação entre duas variáveis categóricas e quando queremos determinar se existe uma associação significativa entre elas. Este teste é baseado na comparação das frequências observadas em uma tabela de contingência com as frequências esperadas sob a hipótese nula de independência entre as variáveis. Esse teste é realizado usando a função chisq.test(), que faz parte do pacote base do R.\n\n```{r}\nq <- table(survey$residue, survey$species)\nchisq.test(q)\n```\n\nHipótese nula: as populações são iguais.\n\nFunção fisher.test(): Este teste é usado para avaliar a associação entre duas variáveis categóricas em uma tabela de contingência 2x2, ou seja, usa-se esta função quando o número de observações é baixo, algo em torno de 6 ou 7.\n\n**A severidade é influenciada pelo resíduo**?\n\n```{r}\nq <- table(survey$residue, survey$inc_class)\nchisq.test(q)\n\nsurvey|>\n  filter(residue != \"NA\") |>\n  count(residue, inc_class) |>\n  ggplot(aes(residue, n, fill = inc_class))+\n  geom_col()\n```\n\n*Conclusão*: Pelo p valor, a classe de severidade independe do resto cultural, ou seja, o resto cultural não influencia na severidade.\n\nNovo conjunto de dados:\n\n```{r}\ncurve <- read_excel(\"dados-diversos.xlsx\", \"curve\")\n\ncurve2 <- curve |> \n  group_by(Irrigation, day) |>\n  summarize(mean_severity = mean(severity),\n            sd_severity = sd(severity))\n\n  curve2 |>\n    ggplot(aes(day, mean_severity, color = Irrigation))+\n    geom_point()+\n    geom_errorbar(aes(ymin = mean_severity - sd_severity, ymax = mean_severity + sd_severity, width = 0.01))+\n    geom_line()\n  \n  \n  curve3 <- curve |>\n    group_by(Irrigation, rep) |>\n    summarise(audpc = AUDPC(day, severity, \n                            y_proportion = F)) |>\n    pivot_wider(1, names_from = Irrigation,\n              values_from = audpc)\n  \n  t.test(curve3$Drip, curve$Furrow)\n```\n\n# Exercício prático:\n\n-   Carregando o conjunto de dados, mutando a variável lesion size de categórica para numerica, agrupando as variáveis e resumindo os dados:\n\n```{r}\nlesion_size <- read_excel(\"tan-spot-wheat.xlsx\", \"lesion_size\")\n\nlesion2 <- lesion_size |>\nmutate(lesion_size = as.numeric(lesion_size)) |>\ngroup_by(cult, silicio, hai) |>\nsummarise(mean_lesion = mean(lesion_size), sd_lesion = sd(lesion_size))\n```\n\nVisualizando os dados graficamente:\n\n```{r}\nlesion2 |>\n  ggplot(aes(hai, mean_lesion, color = silicio))+\n  geom_line()+\n  geom_point()+\n    geom_errorbar(aes(ymin = mean_lesion - sd_lesion, \n                     ymax = mean_lesion + sd_lesion), \n                     width = 0.01)+\n    facet_wrap(~cult)+\n  labs(y = \"Lesion size (mm)\",\n       x = \"Hours after inoculation (hai)\", color = \"Treatment\")\n\n```\n\n# Análise de área abaixo da curva de progresso da doença - AUDPC\n\nA AUDPC (Area Under the Disease Progress Curve) é uma medida utilizada na fitopatologia para quantificar e comparar o progresso de doenças em plantas ao longo do tempo.\n\nA AUDPC é calculada pelos dados de observações repetidas do tamanho ou severidade da lesão em diferentes momentos. A curva do progresso da doença é plotada com o tempo no eixo x e a variável de interesse (ex. tamanho da lesão) no eixo y. A área abaixo dessa curva é então calculada para determinar AUDPC. Valores mais altos de AUDPC indicam um maior impacto da doença, enquanto valores mais baixos indicam um impacto menor.\n\n**Aplicando a AUDPC e visualizando em boxplot**: Nesse bloco de comandos, calculamos a AUDPC para o tamanho da lesão com base nas informações de lesion_size, hai e nos grupos definidos pelas variáveis exp, cult, silicio e rep.\n\n```{r}\nlesion3 <- lesion_size |>\n  mutate(lesion_size = as.numeric(lesion_size)) |>\n  group_by(exp, cult, silicio, rep) |>\n  summarise(audpc = AUDPC(lesion_size, hai))\n\nlesion3 |>\n  ggplot(aes(cult, audpc, color = silicio))+\n  geom_boxplot()+\n  facet_wrap(~ exp)\n  \n```\n\nFunção summarise(audpc = AUDPC(lesion_size, hai)): usamos a função summarise para calcular a AUDPC usando a função AUDPC() com as variáveis lesion_size e hai. O resultado é armazenado na nova variável audpc.\n\n## Teste ANOVA\n\nOs resultados da análise de variância podem ajudar a identificar quais variáveis e interações têm efeito significativo na variável resposta audpc.\n\n```{r}\naov1<- aov(audpc ~ exp*cult*silicio, data = lesion3)\nsummary(aov1)\n```\n\nSe não der significativo, reduz o modelo:\n\n```{r}\naov1<- aov(audpc ~ cult*silicio, data = lesion3)\nsummary(aov1)\n```\n\nPara ver se o modelo está correto, checa as *premissas*.\n\n```{r}\nlibrary(performance)\ncheck_normality(aov1)\ncheck_heteroscedasticity(aov1)\n```\n\nSe não atende as premissas, *transforma os dados* e verifica as médias:\n\n```{r}\naov1<- aov(sqrt(audpc) ~ cult*silicio, data = lesion3)\nsummary(aov1)\ncheck_normality(aov1)\ncheck_heteroscedasticity(aov1)\n\nlibrary(emmeans)\n\nm1 <- emmeans(aov1, ~ cult | silicio, type = \"response\")\nm1\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula15.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","fontsize":"1.1em","theme":{"light":"flatly","dark":"darkly"},"title":"Tabela de contingência e AUDPC","author":"Nívia"},"extensions":{"book":{"multiFile":true}}}}}